{
  "Transform": "AWS::Serverless-2016-10-31",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "DefaultRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration"
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "iot:DescribeCertificate",
                    "iot:DescribeThing",
                    "iot:ListPrincipalThings",
                    "iot:RegisterThing"
                  ],
                  "Resource": [
                    "*"
                  ],
                  "Sid": "adcbf5ef2c4442da9deba13bb73638ad"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:*:logs:*:*:*"
                }
              ]
            },
            "PolicyName": "DefaultRolePolicy"
          }
        ]
      }
    },
    "APIHandler": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": {
          "Bucket": {
            "Ref": "AssetParameters6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98S3BucketA10E8AB1"
          },
          "Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98S3VersionKeyB2D4A41B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98S3VersionKeyB2D4A41B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "app.app",
        "Runtime": "python3.8",
        "Environment": {
          "Variables": {
            "APP_TABLE_NAME": {
              "Ref": "deviceRegTokensD9AABA3D"
            },
            "APP_UPLOAD_BUCKET": {
              "Ref": "iotdeviceuploadbucketCC1AE9FD"
            }
          }
        },
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "DefaultRole",
            "Arn"
          ]
        },
        "Tags": {
          "aws-chalice": "version=1.22.4:stage=device-registration-api:app=device-registration-api"
        },
        "Timeout": 60,
        "Tracing": "PassThrough"
      }
    },
    "RestAPI": {
      "Type": "AWS::Serverless::Api",
      "Properties": {
        "StageName": "api",
        "DefinitionBody": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": "device-registration-api"
          },
          "schemes": [
            "https"
          ],
          "paths": {
            "/token": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            },
            "/certificate": {
              "post": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            },
            "/upload": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "security": [
                  {
                    "sigv4": []
                  }
                ]
              }
            }
          },
          "definitions": {
            "Empty": {
              "type": "object",
              "title": "Empty Schema"
            }
          },
          "x-amazon-apigateway-binary-media-types": [
            "application/octet-stream",
            "application/x-tar",
            "application/zip",
            "audio/basic",
            "audio/ogg",
            "audio/mp4",
            "audio/mpeg",
            "audio/wav",
            "audio/webm",
            "image/png",
            "image/jpg",
            "image/jpeg",
            "image/gif",
            "video/ogg",
            "video/mpeg",
            "video/webm"
          ],
          "securityDefinitions": {
            "sigv4": {
              "in": "header",
              "type": "apiKey",
              "name": "Authorization",
              "x-amazon-apigateway-authtype": "awsSigv4"
            }
          }
        },
        "EndpointConfiguration": "EDGE"
      }
    },
    "APIHandlerInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "APIHandler"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
            {
              "RestAPIId": {
                "Ref": "RestAPI"
              }
            }
          ]
        }
      }
    },
    "ChaliceAppDefaultRolePolicyCAAAC186": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "deviceRegTokensD9AABA3D",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "iotdeviceuploadbucketCC1AE9FD",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "iotdeviceuploadbucketCC1AE9FD",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ChaliceAppDefaultRolePolicyCAAAC186",
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "DefaultRole",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "device-registration-api/ChaliceApp/DefaultRole/Policy/Resource"
      }
    },
    "IoTPolicy": {
      "Type": "AWS::IoT::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iot:Connect",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "iot:Certificate.Subject.CommonName": "${iot:Connection.Thing.ThingName}"
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/${!iot:Connection.Thing.ThingName}"
              }
            },
            {
              "Action": "iot:Publish",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/demofleet/${!iot:Connection.Thing.ThingName}*"
                },
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/${!iot:Connection.Thing.ThingName}*"
                }
              ]
            },
            {
              "Action": "iot:Subscribe",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/demofleet/${!iot:Connection.Thing.ThingName}*"
                },
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/things/${!iot:Connection.Thing.ThingName}*"
                }
              ]
            },
            {
              "Action": "iot:Receive",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/demofleet/${!iot:Connection.Thing.ThingName}*"
                },
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/${!iot:Connection.Thing.ThingName}*"
                }
              ]
            },
            {
              "Action": "iot:AssumeRoleWithCertificate",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:rolealias/${!iot:Connection.Thing.Attributes[tenant]}"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ScopedPolicy"
      },
      "Metadata": {
        "aws:cdk:path": "device-registration-api/IoTPolicy"
      }
    },
    "deviceRegTokensD9AABA3D": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "regToken",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "regToken",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "device-registration-api/deviceRegTokens/Resource"
      }
    },
    "iotdeviceuploadbucketCC1AE9FD": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "device-registration-api/iot-device-upload-bucket/Resource"
      }
    },
    "AWSIoTCredentialProviderRole7444C81F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "credentials.iot.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "device-registration-api/AWSIoTCredentialProviderRole/Resource"
      }
    },
    "AWSIoTCredentialProviderRoleDefaultPolicy96FC9936": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:*:*:",
                    {
                      "Ref": "RestAPI"
                    },
                    "/api/*/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "iotdeviceuploadbucketCC1AE9FD",
                        "Arn"
                      ]
                    },
                    "/${credentials-iot:ThingName}/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AWSIoTCredentialProviderRoleDefaultPolicy96FC9936",
        "Roles": [
          {
            "Ref": "AWSIoTCredentialProviderRole7444C81F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "device-registration-api/AWSIoTCredentialProviderRole/DefaultPolicy/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE02Pz07DMAyHn2X31NtU7cCNMQlpJ6rBC6RJNkzzZ4odoSnKu1O3SHDKF/uXz/Ee9rsD7DbP+ps6Y6dtNSk7qO+szaROKRLnYlgdiRzPxRvGm7o4SiUbp07X+Fb4Xlho0FkHxy7L5X9ktlhkTLEpmVKp77ToCBarQh2gypvknRqSR/NYfCtJtSn6zbyWaEQlgeMdm/I6jFaD5F0OSCRNTAx/BvuIOiQ7Qv3Qo1++tMBs7aG+FDO5ZYGVWlPGp2KvKQctozqMxhfrxHhesanhwZ8pbnt4gsPmixC7XCJjcHBZzx+pkON1WQEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "device-registration-api/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "RestAPIId": {
      "Value": {
        "Ref": "RestAPI"
      }
    },
    "APIHandlerName": {
      "Value": {
        "Ref": "APIHandler"
      }
    },
    "APIHandlerArn": {
      "Value": {
        "Fn::GetAtt": [
          "APIHandler",
          "Arn"
        ]
      }
    },
    "EndpointURL": {
      "Value": {
        "Fn::Sub": "https://${RestAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/"
      }
    },
    "AppTableName": {
      "Value": {
        "Ref": "deviceRegTokensD9AABA3D"
      }
    }
  },
  "Parameters": {
    "AssetParameters6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98S3BucketA10E8AB1": {
      "Type": "String",
      "Description": "S3 bucket for asset \"6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98\""
    },
    "AssetParameters6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98S3VersionKeyB2D4A41B": {
      "Type": "String",
      "Description": "S3 key for asset version \"6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98\""
    },
    "AssetParameters6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98ArtifactHashBD0DEECD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"6ed1beb399c039fd4fe4958b04f74b269b01ce1061480d65c4a5168e52476a98\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}